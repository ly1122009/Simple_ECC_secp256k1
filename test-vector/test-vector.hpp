#pragma once
#include <iostream>
#include "common.hpp"
#include "point.hpp"
#include "ellipticCurve.hpp"
#include <gmpxx.h>

namespace test
{
    
    /* Test Point _mulECC_ver2(void) functions */
    const std::string privateKey_0 = "0";
    const std::string privateKey_1 = "1";
    const std::string privateKey_2 = "2";
    const std::string privateKey_bigNumber = 
        "11302873530277286977317330088775295887228613968519091334644437952622729383175";
    // mpz_class Output_XValue_bigNumber = "43762022694931184757492607356752180905518342017728551120282167112666275442351";
    // // Output_XValue_bigNumber.set_str("43762022694931184757492607356752180905518342017728551120282167112666275442351", 10);
    
    // mpz_class Output_YValue_bigNumber = "114384988717018399469597034834957578408750274128921832447140766594105794755401";
    // Output_YValue_bigNumber.set_str("114384988717018399469597034834957578408750274128921832447140766594105794755401", 10);

} // namespace test

        
        // "43762022694931184757492607356752180905518342017728551120282167112666275442351";
    // mpz_class Output_YValue_bigNumber = 
    //     "114384988717018399469597034834957578408750274128921832447140766594105794755401";
    // Output_privateKey_bigNumber.setvalue("
    //                     43762022694931184757492607356752180905518342017728551120282167112666275442351"
    //                     ,"114384988717018399469597034834957578408750274128921832447140766594105794755401");
